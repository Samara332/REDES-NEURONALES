# -*- coding: utf-8 -*-
"""MNIST.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tPCuJsMtuxoZCLk8qs-nE2Z7yS5CfpWj
"""

import tensorflow as tf
from matplotlib import pyplot as plt
mnist = tf.keras.datasets.mnist
mnist = mnist.load_data()

print(mnist)

(train_X, train_y), (test_X, test_y) = mnist

train_X, test_X= train_X/255, test_X/255

print(train_y[0])

plt.imshow(train_X[0],cmap ='binary')
plt.show()

#Creacion del modelo
model = tf.keras.Sequential()

model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(28, activation= 'relu'))
model.add(tf.keras.layers.Dense(10, activation= 'softmax'))

#Compilación del modelo
model.compile(optimizer=tf.keras.optimizers.Adam(), loss='sparse_categorical_crossentropy', metrics=['accuracy'])
#Entrenamiento del modelo
modelhistory = model.fit(train_X,train_y, epochs=5)
#Evaluar modelo
model.evaluate(test_X,test_y)
#Predicción del modelo
train_X = tf.keras.utils.to_categorical(train_X, 1)
model.predict(test_X[1])

