# -*- coding: utf-8 -*-
"""Ejemplo temperatura .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cYPfSlIjVBHcJtf3uc4JCWEg9TVM_JI8
"""

import tensorflow as tf 
import pandas as pd
import matplotlib.pyplot as plt

#Leer la dataset
dataset = pd.read_csv("celsius_a_fahrenheit.csv")
print(dataset.info())

x = dataset['Celsius']
y = dataset['Fahrenheit']
print("Creando modelo... :)")
model = tf.keras.Sequential()
model.add(tf.keras.layers.Dense(units=1, input_shape=[1]))
#Compilaci贸n del modelo
model.compile(optimizer=tf.keras.optimizers.Adam(1), loss='mean_squared_error')
#Entrenamiento del modelo
modelhistory = model.fit(x,y, epochs=100)

#Verificaci贸n visual
plt.plot(modelhistory.history['loss'])
plt.title('Progreso de perdida')
plt.xlabel('Epocas')
plt.ylabel('Perdidas de entrenamiento')
plt.legend('Perdidas de entrenamiento')
plt.show()

#Realizar predicciones
#Dato de entrada a econtrar
grdC = 19
res = model.predict([grdC])
#Resultado obtenido de conversion aprendido por MCL
print(f'La predicci贸n de conversi贸n de temperatura es: {res}')
print(f'\nVariables internas del modelo (peso y bias): {model.get_weights()}')